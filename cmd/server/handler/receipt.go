package handler

import (
	"encoding/json"
	"net/http"

	"github.com/SolBaa/receipt-processor/internal/domain"
	"github.com/SolBaa/receipt-processor/internal/receipt"
	"github.com/go-chi/chi/v5"
)

func GetReceipt(w http.ResponseWriter, r *http.Request) {
	// Get receipt
	msj := receipt.GetReceipt()
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(msj)
}

func ProcessReceipt(w http.ResponseWriter, r *http.Request) {
	// Takes in a JSON receipt (see example in the example directory) and returns a JSON object with an ID generated by your code
	data := domain.Receipt{}

	err := json.NewDecoder(r.Body).Decode(&data)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	res, err := receipt.ProcessReceipt(data)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(res)
}

func GetReceiptPoints(w http.ResponseWriter, r *http.Request) {
	// Get receipt points
	id := chi.URLParam(r, "id")
	pointsResponse, err := receipt.GetReceiptPoints(id)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(pointsResponse)

}
